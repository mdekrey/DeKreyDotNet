---
import Layout from '@/components/layout.astro';

import type { MarkdownHeading, AstroInstance } from 'astro';
import identity from 'lodash/fp/identity';
import sortBy from 'lodash/fp/sortBy';
import { getAllPosts } from '@/articles/utils';
import { articleComponents } from '@/components/mdx/components.astro';
import MarkdownPicture from '@/components/mdx/MarkdownPicture.astro';
import type { BlogPostFrontmatter, ReadingTime } from '@/articles/post';

const components = { ...articleComponents, img: MarkdownPicture };
const tagSort = sortBy<string>(identity);

export type Props = {
	Component: AstroInstance['default'];
	frontmatter: BlogPostFrontmatter;
	readingTime: ReadingTime;
	title: string;
	headings: MarkdownHeading[];
	image?: string;
	description?: string;
};

export async function getStaticPaths() {
	const articles = await getAllPosts();
	return articles.map((article) => {
		const image = article.image;
		const { excerpt: description } = article.frontmatter;

		return {
			params: { slug: article.slug },
			props: {
				Component: article.Content,
				frontmatter: article.frontmatter,
				readingTime: article.readingTime,
				title: article.frontmatter.title,
				image,
				description,
				headings: article.getHeadings(),
			},
		};
	});
}

const { Component, frontmatter, readingTime, title, image, description } =
	Astro.props;
---

<Layout title={title} image={image} description={description}>
	{
		/*<RightSidebar slot="secondary-sidebar">
		<TableOfContents toc={generateToc(headings)} slot="nav" client:idle />
	</RightSidebar>*/
	}
	<article class="mx-auto md:w-10/12">
		<header>
			<h1 class="font-serif font-normal mb-4 text-4xl" id="article">
				{frontmatter.title}
			</h1>
			<p class="text-gray-500 text-sm">
				{frontmatter.date} &mdash; {readingTime?.text}
				<span class="text-xs">
					{
						frontmatter.tags &&
							tagSort(frontmatter.tags).map((tag) => (
								<a
									class="border border-purple-900 text-black bg-purple-100 inline-block rounded-full px-1 mr-1"
									href={`/articles/tagged/${tag}/page/1/`}
								>
									{tag}
								</a>
							))
					}
				</span>
			</p>
		</header>
		<Component components={components} />
	</article>
</Layout>
